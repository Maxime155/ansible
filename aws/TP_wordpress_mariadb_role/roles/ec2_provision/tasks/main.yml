- name: list instances
  ec2_instance_info:
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    region: "{{ ec2_provision_region }}"
  register: __ec2_info

- name: Instances ID
  debug: 
    msg: "ID : {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
  loop: "{{ __ec2_info.instances }}"

- name: Upload public key to AWS
  ec2_key:
    name: "{{ ec2_provision_key_name }}"
    key_material: "{{ lookup('file', '/home/maxime/.ssh/id_rsa.pub') }}"
    region: "{{ ec2_provision_region }}"
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"

- name: Create security group for wordpress
  ec2_group:
    name: "{{ sec_group_wordpress }}"
    description: "Sec group for {{ sec_group_wordpress }}"
    vpc_id: "{{ vpc_id }}"
    region: "{{ ec2_provision_region }}"
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    rules: 
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on ssh port
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
        rule_desc: allow http for allow
  register: __ec2_info_sec_group_wordpress

- name: Create security group for mariadb
  ec2_group:
    name: "{{ sec_group_mariadb }}"
    description: "Sec group for {{ sec_group_mariadb }}"
    vpc_id: "{{ vpc_id }}"
    region: "{{ ec2_provision_region }}"
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    rules: 
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on ssh port
      - proto: tcp
        ports:
          - 3306
        cidr_ip: 172.31.0.0/16
        rule_desc: allow mariadb for allow
  register: __ec2_info_sec_group_mariadb

- name: create instance wordpress
  amazon.aws.ec2_instance:
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    key_name: "{{ ec2_provision_key_name }}"
    security_group: "{{ __ec2_info_sec_group_wordpress.group_id }}"
    image_id: "{{ image }}"
    instance_type: t2.micro
    region: "{{ ec2_provision_region }}"
    wait: true
    count: 1
    tags:
      Type: Wordpress
      Env: Production
  register: __wordpress_instances

- name: create instance mariadb
  amazon.aws.ec2_instance:
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    key_name: "{{ ec2_provision_key_name }}"
    security_group: "{{ __ec2_info_sec_group_mariadb.group_id }}"
    image_id: "{{ image }}"
    instance_type: t2.micro
    region: "{{ ec2_provision_region }}"
    wait: true
    count: 1
    tags:
      Type: Mariadb
      Env: Production
  register: __mariadb_instances

- name: add wordpress instances to inventory
  add_host:
    hostname: '{{ item.public_dns_name }}'
    ansible_host: '{{ item.public_dns_name }}'
    ansible_user: ubuntu
    ansible_ssh_private_key_file: /home/maxime/.ssh/id_rsa
    groups:
    - wordpress
  loop: "{{ __wordpress_instances.instances }}"

- name: add mariadb instances to inventory
  add_host:
    hostname: '{{ item.public_dns_name }}'
    ansible_host: '{{ item.public_dns_name }}'
    ansible_user: ubuntu
    ansible_ssh_private_key_file: /home/maxime/.ssh/id_rsa
    mariadb_private_ip: '{{ item.private_dns_name }}'
    groups:
    - mariadb
  loop: "{{ __mariadb_instances.instances }}"

- name: Wait for instances to start
  pause:
    seconds: 60

- name: Wait for SSH to come up for WordPress
  wait_for_connection:
    delay: 5
    timeout: 200
    connect_timeout: 10
    sleep: 5
  loop: "{{ __wordpress_instances.instances }}"
  loop_control:
    loop_var: item

- name: Wait for SSH to come up for MariaDB
  wait_for_connection:
    delay: 5
    timeout: 200
    connect_timeout: 10
    sleep: 5
  loop: "{{ __mariadb_instances.instances }}"
  loop_control:
    loop_var: item

- name: add volume to wordpress instance
  amazon.aws.ec2_vol:
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    instance: "{{ item.instance_id }}"
    region: "{{ ec2_provision_region }}"
    volume_size: 10
    volume_type: gp2
    device_name: /dev/xvdf
    delete_on_termination: yes
  loop: "{{ __wordpress_instances.instances }}"
  register: __ec2_volume_wordpress

- name: add volume to mariadb instance
  amazon.aws.ec2_vol:
    aws_access_key: "{{ ec2_provision_access_key }}"
    aws_secret_key: "{{ ec2_provision_secret_key }}"
    instance: "{{ item.instance_id }}"
    region: "{{ ec2_provision_region }}"
    volume_size: 20
    volume_type: gp2
    device_name: /dev/xvdf
    delete_on_termination: yes
  loop: "{{ __mariadb_instances.instances }}"